name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: sbom-converter-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: sbom-converter-windows-x86_64.exe
          - os: macos-13
            target: x86_64-apple-darwin
            asset_name: sbom-converter-macos-x86_64
          - os: macos-14
            target: aarch64-apple-darwin
            asset_name: sbom-converter-macos-aarch64
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version
        id: get_version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Install system dependencies (macOS)
        if: startsWith(matrix.os, 'macos-')
        run: |
          brew install libxml2 pkg-config
          echo "PKG_CONFIG_PATH=$(brew --prefix libxml2)/lib/pkgconfig" >> $GITHUB_ENV
      
      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev pkg-config
      
      - name: Install system dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          vcpkg install libxml2:x64-windows-static-md
          echo "VCPKGRS_DYNAMIC=1" >> $env:GITHUB_ENV
          echo "LIBXML2_INCLUDE_DIR=$env:VCPKG_INSTALLATION_ROOT\installed\x64-windows-static-md\include" >> $env:GITHUB_ENV
          echo "LIBXML2_LIB_DIR=$env:VCPKG_INSTALLATION_ROOT\installed\x64-windows-static-md\lib" >> $env:GITHUB_ENV
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Strip binary (Linux and macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: strip target/${{ matrix.target }}/release/sbom-converter
      
      - name: Copy binary (Unix)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: cp target/${{ matrix.target }}/release/sbom-converter ${{ matrix.asset_name }}
      
      - name: Copy binary (Windows)
        if: matrix.os == 'windows-latest'
        run: cp target/${{ matrix.target }}/release/sbom-converter.exe ${{ matrix.asset_name }}
      
      - name: Create archive (Unix)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: tar czf ${{ matrix.asset_name }}-v${{ steps.get_version.outputs.VERSION }}.tar.gz ${{ matrix.asset_name }} README.md LICENSE-MIT LICENSE-APACHE
      
      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        run: 7z a ${{ matrix.asset_name }}-v${{ steps.get_version.outputs.VERSION }}.zip ${{ matrix.asset_name }} README.md LICENSE-MIT LICENSE-APACHE
      
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ matrix.asset_name }}-v${{ steps.get_version.outputs.VERSION }}.tar.gz
            ${{ matrix.asset_name }}-v${{ steps.get_version.outputs.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}